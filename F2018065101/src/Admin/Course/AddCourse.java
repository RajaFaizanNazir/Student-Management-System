/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin.Course;

import Database.Query;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author RFaiz
 */
public class AddCourse extends javax.swing.JPanel implements ActionListener {

    /**
     * Creates new form AddCourse
     */
    private volatile static AddCourse uniqueInstance = null;
    private volatile static JFrame uniqueJframe = null;

    public AddCourse() throws ClassNotFoundException, InstantiationException, IllegalAccessException, SQLException {
        initComponents();
        ResultSet rs = null;
        rs = Query.executeQuery("SELECT MAX(id) as id FROM course; ");
        int idint = 0;
        if (rs != null) {
            while (rs.next()) {
                if (rs.getString("id") != null) {
                    idint = Integer.valueOf(rs.getString("id"));
                }
            }
        }
        id.setText(String.valueOf(idint + 1));
        rs = Query.executeQuery("Select id,name from teacher;");
        teacher.removeAllItems();
        while (rs.next()) {
            teacher.addItem(rs.getString("id")+":"+rs.getString("name"));
        }
        exit.addActionListener(this);
        back.addActionListener(this);
        save.addActionListener(this);
        savenexit.addActionListener(this);
    }

    public static AddCourse getInstance() throws ClassNotFoundException, InstantiationException, IllegalAccessException, SQLException {
        if (uniqueInstance == null) { //Single Checked
            synchronized (AddCourse.class) {
                if (uniqueInstance == null) { //Double Checked
                    uniqueInstance = new AddCourse();
                }
            }
        }
        return uniqueInstance;
    }

    public static void showGUI() throws ClassNotFoundException, InstantiationException, IllegalAccessException, SQLException {
        uniqueInstance = null;
        getInstance();
        uniqueJframe = null;
        if (uniqueJframe == null) { //Single Checked
            synchronized (AddCourse.class) {
                if (uniqueJframe == null) { //Double Checked
                    uniqueJframe = new JFrame();
                    uniqueJframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    uniqueJframe.add(getInstance());
                    uniqueJframe.pack();
                    uniqueJframe.setLocationRelativeTo(null);
                    uniqueJframe.setTitle("Add Course");
                }
            }
        }
        uniqueJframe.setLocationRelativeTo(null);
        uniqueJframe.setVisible(true);
    }

    public static void hideGUI() {
        uniqueJframe.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        back = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        savenexit = new javax.swing.JButton();
        save = new javax.swing.JButton();
        day = new javax.swing.JComboBox<>();
        slot = new javax.swing.JComboBox<>();
        teacher = new javax.swing.JComboBox<>();
        cr = new javax.swing.JSpinner();
        capacity = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        secondday = new javax.swing.JComboBox<>();

        back.setText("BACK");

        exit.setText("EXIT");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Add Course");

        jLabel2.setText("ID");

        jLabel3.setText("Name");

        jLabel4.setText("Cr");

        jLabel5.setText("Capacity");

        jLabel6.setText("Teacher");

        jLabel7.setText("Day");

        jLabel8.setText("Time Slot");

        id.setEditable(false);

        savenexit.setText("Save and Close");

        save.setText("Save");

        day.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" }));

        slot.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7" }));

        cr.setModel(new javax.swing.SpinnerNumberModel(2, 2, 6, 1));

        capacity.setModel(new javax.swing.SpinnerNumberModel(20, 20, 50, 1));

        jLabel9.setText("Second Day");

        secondday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(back)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(save)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(savenexit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exit)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(149, 149, 149))
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(secondday, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(name)
                        .addComponent(id)
                        .addComponent(day, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(slot, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(teacher, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cr)
                        .addComponent(capacity)))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(capacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(teacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(secondday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(slot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(save)
                        .addComponent(savenexit))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(exit)
                        .addComponent(back)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JSpinner capacity;
    private javax.swing.JSpinner cr;
    private javax.swing.JComboBox<String> day;
    private javax.swing.JButton exit;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField name;
    private javax.swing.JButton save;
    private javax.swing.JButton savenexit;
    private javax.swing.JComboBox<String> secondday;
    private javax.swing.JComboBox<String> slot;
    private javax.swing.JComboBox<String> teacher;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == back) {
            try {
                hideGUI();
                Course.showGUI();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AddCourse.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (e.getSource() == exit) {
            JFrame f = new JFrame();
            int a = JOptionPane.showConfirmDialog(f, "Are you sure?");
            if (a == JOptionPane.YES_OPTION) {
                System.exit(0);
            }
        } else if (e.getSource() == save) {
            try {
                String bothdays = day.getSelectedItem().toString() + "," + secondday.getSelectedItem().toString();
                String statement = ("INSERT INTO course(name,slot,day,teacherid,capacity,cr) VALUES(\'" + name.getText() + "\',"
                        + slot.getSelectedItem().toString() + ",\'" + bothdays + "\'," + teacher.getSelectedItem().toString().split(":",2)[0] + "," + String.valueOf(capacity.getValue()) + "," + String.valueOf(cr.getValue()) + ");");
                if (Query.executeUpdate(statement) > 0) {
                    JFrame f = new JFrame();
                    JOptionPane.showMessageDialog(f, "Saved Succesfully");
                }
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
                Logger.getLogger(AddCourse.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (e.getSource() == savenexit) {
            try {
                String bothdays = day.getSelectedItem().toString() + "," + secondday.getSelectedItem().toString();
                String statement = ("INSERT INTO course(name,slot,day,teacherid,capacity,cr) VALUES(\'" + name.getText() + "\',"
                        + slot.getSelectedItem().toString() + ",\'" + bothdays + "\'," + teacher.getSelectedItem().toString().split(":",2)[0] + "," + String.valueOf(capacity.getValue()) + "," + String.valueOf(cr.getValue()) + ");");
                //System.out.println(statement);
                Query.executeUpdate(statement);
                hideGUI();
                Course.showGUI();
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
                Logger.getLogger(AddCourse.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
